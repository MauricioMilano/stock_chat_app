version: "3.8"
services:
  app:
    build: ./app
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - rabbitmq
      - postgres
    restart: unless-stopped

  worker:
    build: ./worker
    networks:
      - app-network
    depends_on:
      - rabbitmq
    restart: unless-stopped
  frontend:
    build: ./frontend
    ports:
      - "8081:8081"
    networks:
      - app-network
  
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672  
      - 15672:15672 
    environment:
      RABBITMQ_DEFAULT_USER: "admin"  
      RABBITMQ_DEFAULT_PASS: "admin" 
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    networks:
      - app-network

  postgres:
    build: ./postgres
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
    volumes:
      - ./postgres/pg-data:${PGDATA}
      - ./01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - postgres
networks: 
  app-network:
    driver: bridge